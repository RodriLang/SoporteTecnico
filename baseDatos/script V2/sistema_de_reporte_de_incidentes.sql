-- MySQL Script generated by MySQL Workbench
-- Sun Nov 19 11:10:24 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sistema_de_reportes_de_incidentes
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sistema_de_reportes_de_incidentes` ;

-- -----------------------------------------------------
-- Schema sistema_de_reportes_de_incidentes
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sistema_de_reportes_de_incidentes` DEFAULT CHARACTER SET utf8 COLLATE utf8_spanish2_ci ;
USE `sistema_de_reportes_de_incidentes` ;

-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`tecnico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`tecnico` (
  `idtecnico` INT NOT NULL AUTO_INCREMENT,
  `matricula` INT NOT NULL,
  `dni` INT NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `estado` TINYINT NOT NULL,
  PRIMARY KEY (`idtecnico`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `matricula_UNIQUE` ON `sistema_de_reportes_de_incidentes`.`tecnico` (`matricula` ASC) VISIBLE;

CREATE UNIQUE INDEX `dni_UNIQUE` ON `sistema_de_reportes_de_incidentes`.`tecnico` (`dni` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`cliente` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `cuit` VARCHAR(11) NOT NULL,
  `razonSocial` VARCHAR(45) NOT NULL,
  `dni` INT NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `estado` TINYINT NOT NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `cuit_UNIQUE` ON `sistema_de_reportes_de_incidentes`.`cliente` (`cuit` ASC) VISIBLE;

CREATE UNIQUE INDEX `dni_UNIQUE` ON `sistema_de_reportes_de_incidentes`.`cliente` (`dni` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`especialidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`especialidad` (
  `idEspecialidad` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEspecialidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`tipo_problema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`tipo_problema` (
  `idTipoProblema` INT NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTipoProblema`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`servicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`servicio` (
  `idServicio` INT NOT NULL AUTO_INCREMENT,
  `app` VARCHAR(45) NOT NULL,
  `so` VARCHAR(45) NOT NULL,
  `estado` TINYINT NOT NULL,
  PRIMARY KEY (`idServicio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`cliente_servicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`cliente_servicio` (
  `idClienteServicio` INT NOT NULL AUTO_INCREMENT,
  `idCliente` INT NOT NULL,
  `idServicio` INT NOT NULL,
  PRIMARY KEY (`idClienteServicio`),
  CONSTRAINT `tiene un cliente`
    FOREIGN KEY (`idCliente`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tiene un servicio`
    FOREIGN KEY (`idServicio`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`servicio` (`idServicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tiene un servicio_idx1` ON `sistema_de_reportes_de_incidentes`.`cliente_servicio` (`idServicio` ASC) VISIBLE;

CREATE INDEX `tiene un cliente_idx` ON `sistema_de_reportes_de_incidentes`.`cliente_servicio` (`idCliente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`incidente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`incidente` (
  `idIncidente` INT NOT NULL AUTO_INCREMENT,
  `idTecnico` INT NULL,
  `inicio` DATE NOT NULL,
  `resolucionSegunSistema` DATE NULL,
  `resolucionSegunOperador` DATE NULL,
  `resuelto` TINYINT NOT NULL,
  `indicacionesTecnicas` VARCHAR(100) NULL,
  `dificultadTecnica` VARCHAR(45) NULL,
  PRIMARY KEY (`idIncidente`),
  CONSTRAINT `tiene un tecnico`
    FOREIGN KEY (`idTecnico`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`tecnico` (`idtecnico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tiene un tecnico_idx` ON `sistema_de_reportes_de_incidentes`.`incidente` (`idTecnico` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`servicio_incidente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`servicio_incidente` (
  `idServicioProblema` INT NOT NULL AUTO_INCREMENT,
  `idServicio` INT NOT NULL,
  `idIncidente` INT NOT NULL,
  PRIMARY KEY (`idServicioProblema`),
  CONSTRAINT `tiene un servicio`
    FOREIGN KEY (`idServicio`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`servicio` (`idServicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tiene un incidente`
    FOREIGN KEY (`idIncidente`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`incidente` (`idIncidente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tiene un servicio_idx` ON `sistema_de_reportes_de_incidentes`.`servicio_incidente` (`idServicio` ASC) VISIBLE;

CREATE INDEX `tiene un problema_idx` ON `sistema_de_reportes_de_incidentes`.`servicio_incidente` (`idIncidente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`tecnico_especialidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`tecnico_especialidad` (
  `idTecnicoEspecialidad` INT NOT NULL AUTO_INCREMENT,
  `idTecnico` INT NOT NULL,
  `idEspecialidad` INT NOT NULL,
  PRIMARY KEY (`idTecnicoEspecialidad`),
  CONSTRAINT `tiene un tecnico`
    FOREIGN KEY (`idTecnico`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`tecnico` (`idtecnico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tiene una especialidad`
    FOREIGN KEY (`idEspecialidad`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`especialidad` (`idEspecialidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tiene un tecnico_idx` ON `sistema_de_reportes_de_incidentes`.`tecnico_especialidad` (`idTecnico` ASC) VISIBLE;

CREATE INDEX `tiene una especialidad_idx` ON `sistema_de_reportes_de_incidentes`.`tecnico_especialidad` (`idEspecialidad` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`especialidad_tipo_problema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`especialidad_tipo_problema` (
  `idEspecialidadTipoProblema` INT NOT NULL,
  `idEspecialidad` INT NOT NULL,
  `idTipoProblema` INT NOT NULL,
  PRIMARY KEY (`idEspecialidadTipoProblema`),
  CONSTRAINT `tiene especialidad`
    FOREIGN KEY (`idEspecialidad`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`especialidad` (`idEspecialidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tiene tipo_problema`
    FOREIGN KEY (`idTipoProblema`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`tipo_problema` (`idTipoProblema`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tiene especialidad_idx` ON `sistema_de_reportes_de_incidentes`.`especialidad_tipo_problema` (`idEspecialidad` ASC) VISIBLE;

CREATE INDEX `tiene tipo_problema_idx` ON `sistema_de_reportes_de_incidentes`.`especialidad_tipo_problema` (`idTipoProblema` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`reporte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`reporte` (
  `idReporte` INT NOT NULL AUTO_INCREMENT,
  `descripcionProblema` VARCHAR(45) NOT NULL,
  `idTipoProblema` INT NOT NULL,
  PRIMARY KEY (`idReporte`),
  CONSTRAINT `tiene un tipo_problema`
    FOREIGN KEY (`idTipoProblema`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`tipo_problema` (`idTipoProblema`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tiene un tipo_problema_idx` ON `sistema_de_reportes_de_incidentes`.`reporte` (`idTipoProblema` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema_de_reportes_de_incidentes`.`incidente_reporte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_de_reportes_de_incidentes`.`incidente_reporte` (
  `idIncidenteReporte` INT NOT NULL AUTO_INCREMENT,
  `idIncidente` INT NOT NULL,
  `idReporte` INT NOT NULL,
  PRIMARY KEY (`idIncidenteReporte`),
  CONSTRAINT `tiene un incidente`
    FOREIGN KEY (`idIncidente`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`incidente` (`idIncidente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tiene un reporte`
    FOREIGN KEY (`idReporte`)
    REFERENCES `sistema_de_reportes_de_incidentes`.`reporte` (`idReporte`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `tiene un incidente_idx` ON `sistema_de_reportes_de_incidentes`.`incidente_reporte` (`idIncidente` ASC) VISIBLE;

CREATE INDEX `tiene un reporte_idx` ON `sistema_de_reportes_de_incidentes`.`incidente_reporte` (`idReporte` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
